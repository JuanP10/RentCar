version: "3.8"

services:
  db-customerservice:
    container_name: db-Customer
    image: postgres:15.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: ms_customer
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234
    ports:
      - "5431:5431"
    expose:
      - 5431
    command: -p 5431

  db-bookingservice:
    container_name: db-Booking
    image: postgres:15.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: ms_booking
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234
    ports:
      - "5430:5430"
    expose:
      - 5430
    command: -p 5430

  db-carinventoryservice:
    container_name: db-CarInventory
    image: postgres:15.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: ms_carinventory
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234
    ports:
      - "5432:5432"
    expose:
      - 5432
    command: -p 5432

  db-paymentservice:
    container_name: db-Payment
    image: postgres:15.2
    restart: unless-stopped
    environment:
      POSTGRES_DB: ms_payment
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234
    ports:
      - "5433:5433"
    expose:
      - 5433
    command: -p 5433

  eurekaServer:
    container_name: eureka-server
    image: springcloud/eureka
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_APPLICATION_NAME= EurekaServer
      - EUREKA_CLIENT_REGISTER-WITH-EUREKA=false
      - EUREKA_CLIENT_FETCH-REGISTRY=false
      - EUREKA_INSTANCE_PREFER-IP-ADDRESS=true

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./grafana-datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml

networks:
  monitoring:
    driver: bridge
